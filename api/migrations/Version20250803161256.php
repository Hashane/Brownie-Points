<?php

declare(strict_types=1);

namespace DoctrineMigrations;

use Doctrine\DBAL\Schema\Schema;
use Doctrine\Migrations\AbstractMigration;

/**
 * Auto-generated Migration: Please modify to your needs!
 */
final class Version20250803161256 extends AbstractMigration
{
    public function getDescription(): string
    {
        return '';
    }

    public function up(Schema $schema): void
    {
        // this up() migration is auto-generated, please modify it to your needs
        $this->addSql(<<<'SQL'
            DROP SEQUENCE greeting_id_seq CASCADE
        SQL);
        $this->addSql(<<<'SQL'
            CREATE TABLE customer (id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, name VARCHAR(255) NOT NULL, email VARCHAR(180) NOT NULL, phone VARCHAR(20) DEFAULT NULL, qr_code VARCHAR(255) NOT NULL, otp_hash VARCHAR(255) DEFAULT NULL, points_balance INT NOT NULL, tier_id INT NOT NULL, PRIMARY KEY(id))
        SQL);
        $this->addSql(<<<'SQL'
            CREATE UNIQUE INDEX UNIQ_81398E09E7927C74 ON customer (email)
        SQL);
        $this->addSql(<<<'SQL'
            CREATE UNIQUE INDEX UNIQ_81398E09444F97DD ON customer (phone)
        SQL);
        $this->addSql(<<<'SQL'
            CREATE UNIQUE INDEX UNIQ_81398E097D8B1FB5 ON customer (qr_code)
        SQL);
        $this->addSql(<<<'SQL'
            CREATE INDEX IDX_81398E09A354F9DC ON customer (tier_id)
        SQL);
        $this->addSql(<<<'SQL'
            CREATE TABLE customer_point (id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, change INT NOT NULL, reason VARCHAR(255) NOT NULL, reference_id INT NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, customer_id INT NOT NULL, created_by_id INT NOT NULL, PRIMARY KEY(id))
        SQL);
        $this->addSql(<<<'SQL'
            CREATE INDEX IDX_7990861F9395C3F3 ON customer_point (customer_id)
        SQL);
        $this->addSql(<<<'SQL'
            CREATE INDEX IDX_7990861FB03A8386 ON customer_point (created_by_id)
        SQL);
        $this->addSql(<<<'SQL'
            CREATE TABLE point_rule (id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, scan_type VARCHAR(50) NOT NULL, calculation_method VARCHAR(50) NOT NULL, value NUMERIC(10, 2) NOT NULL, max_points_per_day INT DEFAULT NULL, active BOOLEAN NOT NULL, updated_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, guest_tier_id INT DEFAULT NULL, updated_by_id INT NOT NULL, PRIMARY KEY(id))
        SQL);
        $this->addSql(<<<'SQL'
            CREATE INDEX IDX_CF584BAEE3913D90 ON point_rule (guest_tier_id)
        SQL);
        $this->addSql(<<<'SQL'
            CREATE INDEX IDX_CF584BAE896DBBDE ON point_rule (updated_by_id)
        SQL);
        $this->addSql(<<<'SQL'
            CREATE TABLE redemption (id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, otp_verified BOOLEAN NOT NULL, status VARCHAR(50) NOT NULL, notes TEXT DEFAULT NULL, attempts_count INT NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, updated_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, customer_id INT NOT NULL, reward_id INT NOT NULL, redeemed_by_id INT NOT NULL, PRIMARY KEY(id))
        SQL);
        $this->addSql(<<<'SQL'
            CREATE INDEX IDX_2C6134239395C3F3 ON redemption (customer_id)
        SQL);
        $this->addSql(<<<'SQL'
            CREATE INDEX IDX_2C613423E466ACA1 ON redemption (reward_id)
        SQL);
        $this->addSql(<<<'SQL'
            CREATE INDEX IDX_2C6134232FBC08BA ON redemption (redeemed_by_id)
        SQL);
        $this->addSql(<<<'SQL'
            CREATE TABLE reward (id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, title VARCHAR(255) NOT NULL, description VARCHAR(255) DEFAULT NULL, points_required INT NOT NULL, quantity_available INT NOT NULL, active BOOLEAN NOT NULL, image_url VARCHAR(255) DEFAULT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, updated_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, PRIMARY KEY(id))
        SQL);
        $this->addSql(<<<'SQL'
            CREATE TABLE setting (id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, key VARCHAR(100) NOT NULL, value TEXT NOT NULL, updated_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, updated_by_id INT NOT NULL, PRIMARY KEY(id))
        SQL);
        $this->addSql(<<<'SQL'
            CREATE INDEX IDX_9F74B898896DBBDE ON setting (updated_by_id)
        SQL);
        $this->addSql(<<<'SQL'
            CREATE TABLE tier (id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, name VARCHAR(255) NOT NULL, min_points_required INT NOT NULL, max_points_allowed INT NOT NULL, badge_icon_url VARCHAR(255) DEFAULT NULL, perks JSON DEFAULT NULL, active BOOLEAN NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, PRIMARY KEY(id))
        SQL);
        $this->addSql(<<<'SQL'
            CREATE TABLE transaction (id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, scan_type VARCHAR(50) NOT NULL, description VARCHAR(255) DEFAULT NULL, amount NUMERIC(10, 2) NOT NULL, points_awarded INT NOT NULL, reference_id INT NOT NULL, scanned_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, customer_id INT NOT NULL, authorized_by_id INT NOT NULL, PRIMARY KEY(id))
        SQL);
        $this->addSql(<<<'SQL'
            CREATE INDEX IDX_723705D19395C3F3 ON transaction (customer_id)
        SQL);
        $this->addSql(<<<'SQL'
            CREATE INDEX IDX_723705D12B62D3A1 ON transaction (authorized_by_id)
        SQL);
        $this->addSql(<<<'SQL'
            CREATE TABLE "user" (id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, name VARCHAR(255) NOT NULL, email VARCHAR(180) NOT NULL, phone VARCHAR(20) DEFAULT NULL, password_hash VARCHAR(255) NOT NULL, role VARCHAR(50) NOT NULL, branch VARCHAR(100) DEFAULT NULL, active BOOLEAN NOT NULL, last_login DATE DEFAULT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, updated_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, PRIMARY KEY(id))
        SQL);
        $this->addSql(<<<'SQL'
            CREATE UNIQUE INDEX UNIQ_8D93D649E7927C74 ON "user" (email)
        SQL);
        $this->addSql(<<<'SQL'
            CREATE UNIQUE INDEX UNIQ_8D93D649444F97DD ON "user" (phone)
        SQL);
        $this->addSql(<<<'SQL'
            ALTER TABLE customer ADD CONSTRAINT FK_81398E09A354F9DC FOREIGN KEY (tier_id) REFERENCES tier (id) NOT DEFERRABLE INITIALLY IMMEDIATE
        SQL);
        $this->addSql(<<<'SQL'
            ALTER TABLE customer_point ADD CONSTRAINT FK_7990861F9395C3F3 FOREIGN KEY (customer_id) REFERENCES customer (id) NOT DEFERRABLE INITIALLY IMMEDIATE
        SQL);
        $this->addSql(<<<'SQL'
            ALTER TABLE customer_point ADD CONSTRAINT FK_7990861FB03A8386 FOREIGN KEY (created_by_id) REFERENCES "user" (id) NOT DEFERRABLE INITIALLY IMMEDIATE
        SQL);
        $this->addSql(<<<'SQL'
            ALTER TABLE point_rule ADD CONSTRAINT FK_CF584BAEE3913D90 FOREIGN KEY (guest_tier_id) REFERENCES tier (id) NOT DEFERRABLE INITIALLY IMMEDIATE
        SQL);
        $this->addSql(<<<'SQL'
            ALTER TABLE point_rule ADD CONSTRAINT FK_CF584BAE896DBBDE FOREIGN KEY (updated_by_id) REFERENCES "user" (id) NOT DEFERRABLE INITIALLY IMMEDIATE
        SQL);
        $this->addSql(<<<'SQL'
            ALTER TABLE redemption ADD CONSTRAINT FK_2C6134239395C3F3 FOREIGN KEY (customer_id) REFERENCES customer (id) NOT DEFERRABLE INITIALLY IMMEDIATE
        SQL);
        $this->addSql(<<<'SQL'
            ALTER TABLE redemption ADD CONSTRAINT FK_2C613423E466ACA1 FOREIGN KEY (reward_id) REFERENCES reward (id) NOT DEFERRABLE INITIALLY IMMEDIATE
        SQL);
        $this->addSql(<<<'SQL'
            ALTER TABLE redemption ADD CONSTRAINT FK_2C6134232FBC08BA FOREIGN KEY (redeemed_by_id) REFERENCES "user" (id) NOT DEFERRABLE INITIALLY IMMEDIATE
        SQL);
        $this->addSql(<<<'SQL'
            ALTER TABLE setting ADD CONSTRAINT FK_9F74B898896DBBDE FOREIGN KEY (updated_by_id) REFERENCES "user" (id) NOT DEFERRABLE INITIALLY IMMEDIATE
        SQL);
        $this->addSql(<<<'SQL'
            ALTER TABLE transaction ADD CONSTRAINT FK_723705D19395C3F3 FOREIGN KEY (customer_id) REFERENCES customer (id) NOT DEFERRABLE INITIALLY IMMEDIATE
        SQL);
        $this->addSql(<<<'SQL'
            ALTER TABLE transaction ADD CONSTRAINT FK_723705D12B62D3A1 FOREIGN KEY (authorized_by_id) REFERENCES "user" (id) NOT DEFERRABLE INITIALLY IMMEDIATE
        SQL);
        $this->addSql(<<<'SQL'
            DROP TABLE greeting
        SQL);
    }

    public function down(Schema $schema): void
    {
        // this down() migration is auto-generated, please modify it to your needs
        $this->addSql(<<<'SQL'
            CREATE SEQUENCE greeting_id_seq INCREMENT BY 1 MINVALUE 1 START 1
        SQL);
        $this->addSql(<<<'SQL'
            CREATE TABLE greeting (id INT NOT NULL, name VARCHAR(255) NOT NULL, PRIMARY KEY(id))
        SQL);
        $this->addSql(<<<'SQL'
            ALTER TABLE customer DROP CONSTRAINT FK_81398E09A354F9DC
        SQL);
        $this->addSql(<<<'SQL'
            ALTER TABLE customer_point DROP CONSTRAINT FK_7990861F9395C3F3
        SQL);
        $this->addSql(<<<'SQL'
            ALTER TABLE customer_point DROP CONSTRAINT FK_7990861FB03A8386
        SQL);
        $this->addSql(<<<'SQL'
            ALTER TABLE point_rule DROP CONSTRAINT FK_CF584BAEE3913D90
        SQL);
        $this->addSql(<<<'SQL'
            ALTER TABLE point_rule DROP CONSTRAINT FK_CF584BAE896DBBDE
        SQL);
        $this->addSql(<<<'SQL'
            ALTER TABLE redemption DROP CONSTRAINT FK_2C6134239395C3F3
        SQL);
        $this->addSql(<<<'SQL'
            ALTER TABLE redemption DROP CONSTRAINT FK_2C613423E466ACA1
        SQL);
        $this->addSql(<<<'SQL'
            ALTER TABLE redemption DROP CONSTRAINT FK_2C6134232FBC08BA
        SQL);
        $this->addSql(<<<'SQL'
            ALTER TABLE setting DROP CONSTRAINT FK_9F74B898896DBBDE
        SQL);
        $this->addSql(<<<'SQL'
            ALTER TABLE transaction DROP CONSTRAINT FK_723705D19395C3F3
        SQL);
        $this->addSql(<<<'SQL'
            ALTER TABLE transaction DROP CONSTRAINT FK_723705D12B62D3A1
        SQL);
        $this->addSql(<<<'SQL'
            DROP TABLE customer
        SQL);
        $this->addSql(<<<'SQL'
            DROP TABLE customer_point
        SQL);
        $this->addSql(<<<'SQL'
            DROP TABLE point_rule
        SQL);
        $this->addSql(<<<'SQL'
            DROP TABLE redemption
        SQL);
        $this->addSql(<<<'SQL'
            DROP TABLE reward
        SQL);
        $this->addSql(<<<'SQL'
            DROP TABLE setting
        SQL);
        $this->addSql(<<<'SQL'
            DROP TABLE tier
        SQL);
        $this->addSql(<<<'SQL'
            DROP TABLE transaction
        SQL);
        $this->addSql(<<<'SQL'
            DROP TABLE "user"
        SQL);
    }
}
